version: '3.8'

services:
  # Next.js Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - TEXT_LK_API_TOKEN=${TEXT_LK_API_TOKEN}
      - TEXT_LK_SENDER_ID=${TEXT_LK_SENDER_ID}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_SECURE=${SMTP_SECURE}
      - CRON_SECRET=${CRON_SECRET}
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - sevanet-network
    restart: unless-stopped

  # FastAPI Backend Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - PROJECT_NAME=SevaNet Issue Reporting API
      - DEBUG=True
      - ENVIRONMENT=development
      - CORS_ORIGINS=["http://localhost:3000"]
    volumes:
      - ./backend:/app
      - backend-uploads:/app/uploads
    networks:
      - sevanet-network
    restart: unless-stopped

  # PostgreSQL Database (Local Development - Optional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=sevanet
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sevanet123}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed-data.sql:/docker-entrypoint-initdb.d/02-seed-data.sql
    networks:
      - sevanet-network
    restart: unless-stopped
    profiles:
      - local-db

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sevanet-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    profiles:
      - cache

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  backend-uploads:
    driver: local

networks:
  sevanet-network:
    driver: bridge